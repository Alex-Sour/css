#!/bin/bash

# This workflow runs axe checks when doc paths with examples are modified.
# Developers frequently copy and paste examples from documentation so it's important to ensure the examples are accessible.
# Learn more about @axe-core/cli here: https://github.com/dequelabs/axe-core-npm/tree/develop/packages/cli

printf "%s\n" "${MODIFIED_COMPONENT_OR_UTILITIES_PATHS[@]}" > temp.txt
echo "Changed files: ${MODIFIED_COMPONENT_OR_UTILITIES_PATHS[@]}"

skip_axe_message="Skipping axe testing because there were no changes to documentation pages we care about"

# Store the paths of pages we care about
nav_paths=()
while IFS= read -r file
do
  prefix="docs/content"
  suffix=".md"
  doc_path=${file#"$prefix"}
  doc_path=${doc_path%"$suffix"}
  nav_paths+=($doc_path)
done < temp.txt
rm temp.txt

# Return early if no relevant files were modified
echo "Verify whether ${nav_paths[@]} is part of starting point violation"
echo "*"
echo "*"

# https://stackoverflow.com/a/8574392
containsElement () {
  local e match="$1"
  shift
  for e; do [[ "$e" == "$match" ]] && return 0; done
  return 1
}

# Starting point violations
# DO NOT ADD TO THIS LIST!
needs_to_be_fixed=(
  /components/autocomplete
  /components/avatars
  /components/box
  /components/buttons
  /components/header
  /components/markdown
  /components/progress
  /components/select-menu
  /components/labels
  /components/timeline
  /components/toasts
  /utilities/flexbox
  /utilities/layout 
)

echo "############################################################"
echo "WARNING"
echo "The following paths are excluded from this automated accessibility check."
echo "They contain known violations and should be addressed:"
printf '%s\n' "${needs_to_be_fixed[@]}"
echo "############################################################"

# Generate doc urls for testing
doc_urls=()
for i in "${nav_paths[@]}"; 
do
  if containsElement "${i//\"/}" "${needs_to_be_fixed[@]}"; then
    continue
  else
    doc_url="http://localhost:8000$i"
    doc_url="${doc_url//\"/}"
    doc_urls+=($doc_url)
  fi
done

# Run axe checks only if there are pages to run it on
if [ ${#doc_urls[@]} -eq 0 ]; then
  echo $skip_axe_message
  exit
else
  npm install -g @axe-core/cli
  # https://github.com/dequelabs/axe-core-npm/tree/develop/packages/cli
  # We exclude rules that depend on full page context.
  axe ${doc_urls[@]} --include "iframe" --disable html-has-lang,frame-title,page-has-heading-one,region,color-contrast,landmark-unique,landmark-one-main --show-errors
fi
